#include<stdio.h>
void printArray(int arr[], int size);

int pass = 1;

void swap(int arr[], int i, int j){
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
}

int partition(int arr[], int low, int high){
    int pivot = arr[low];
    int left = low + 1;
    int right = high;
    while(1){
        while(left<=right&&arr[left]<=pivot)
        left++;
        while(right>=left&&arr[right]>=pivot)
        right--;
        if(left>right)
        break;
        swap(arr, left, right);
    }
    swap(arr,low, right);
    
    printf("pass %d (pivot=%d):", pass++, pivot);
    printArray(arr, high - low + 1);
    return right;
}

void quickSort(int arr[], int low, int high){
    if(low<high){
        int pivotIndex = partition(arr, low, high);
        quickSort(arr, low, pivotIndex - 1);
        quickSort(arr, pivotIndex + 1, high);
    }
}

void printArray(int arr[],int size){
    for(int i=0;i<size;i++)
    printf("%d ",arr[i]);
    printf("\n");
}

int main(){
    int arr[] = {10, 7, 8, 9, 1, 5};
    int n = sizeof(arr)/sizeof(arr[0]);
    printf("Original Array: ");
    printArray(arr,n);
    
    quickSort(arr,0,n-1);
    
    printf("Sorted array: ");
    printArray(arr,n);
    return 0;
}
